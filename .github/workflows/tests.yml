name: Trading Bot Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Micromamba
      uses: mamba-org/setup-micromamba@v1
      with:
        micromamba-version: 'latest'
        environment-file: environment-simple.yml
        init-shell: >-
          bash
        cache-environment: true
        post-cleanup: 'all'

    - name: Install additional test dependencies
      shell: micromamba-shell {0}
      run: |
        pip install pytest-xdist pytest-timeout

    - name: Lint with ruff (if available)
      shell: micromamba-shell {0}
      run: |
        pip install ruff || echo "Ruff not available, skipping lint"
        ruff check . --exit-zero || echo "Linting completed with warnings"

    - name: Run unit tests
      shell: micromamba-shell {0}
      run: |
        python run_tests.py

    - name: Run tests with pytest and coverage
      shell: micromamba-shell {0}
      run: |
        pytest tests/ -v --cov=. --cov-report=xml --cov-report=term-missing --timeout=300

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  integration-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Set up Micromamba
      uses: mamba-org/setup-micromamba@v1
      with:
        micromamba-version: 'latest'
        environment-file: environment-simple.yml
        init-shell: >-
          bash
        cache-environment: true
        post-cleanup: 'all'

    - name: Test basic system functionality
      shell: micromamba-shell {0}
      run: |
        python test_bot.py

    - name: Test single strategy mode
      shell: micromamba-shell {0}
      run: |
        # Test with minimal data to avoid network issues
        timeout 60 python main.py --mode single --symbol AAPL --strategy sma --start 2024-01-01 || echo "Single test completed (may have failed due to network)"

    - name: Test optimization mode (quick)
      shell: micromamba-shell {0}
      run: |
        # Quick optimization test
        timeout 120 python main.py --mode optimize --symbol AAPL --start 2024-01-01 || echo "Optimization test completed (may have failed due to network)"

  security-scan:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Run Bandit Security Scan
      uses: securecodewarrior/github-action-bandit@v1
      with:
        directory: .
        exit_on_error: false
        format: json
        output_file: bandit-report.json

    - name: Upload security scan results
      uses: actions/upload-artifact@v3
      with:
        name: bandit-security-report
        path: bandit-report.json

  code-quality:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install code quality tools
      run: |
        pip install ruff mypy

    - name: Run ruff linting
      run: |
        ruff check . --output-format=github

    - name: Run type checking with mypy
      run: |
        mypy --install-types --non-interactive --ignore-missing-imports . || echo "Type checking completed with issues"